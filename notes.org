* 2020-02-03: Initial results observations

With the default radius of sqrt(2) * resolution:
	Each pixel is pulling points from 56.5 m^2
		Ï€[ 3m * sqrt(2) ]^2 = 56.2 m^2

raster tilesize more efficient if multiple of 8 (16) pixels

output tiles are 1001x1001 px.  Need to shift/shrink bounds by 0.5 px.


Lot of "extra" points in class 17

AGL laz merges classes 8 and 2 into 2

* 2020-02-04: Don't overwrite job logs
	add #SBATCH --open-mode=append

* 2020-02-04: Update Class List
	Include Class 1 (Unclassified)
	Continue to drop 7 (noise) and 9 (water)
	Drop Class 10 (Water Edge - Metro, Ignored Ground - Southwest/MN River Basin)
	Drop Class 11 (Scan Edge - Metro)
	Drop Class 12 (Overlap - South East))
	Drop Class 17 (Overlap - Arrowhead, Central Lakes) 

* Need to reclass class 1 (mccloud and others have all non ground and noise and everything 1)

* Kill over 120m AGL

* Sterns class 6 are breaklines

* 2020-02-11: Replace Chisago Cty data
* 2020-02-10: TODO: output agl laz needs to be cropped to output boundary
* 2020-02-10: Chisago area is high point density
  Need to deal with this in the mkgrid.py

  Chisago has 20-33 Mpts per qq250k
  Metro medium density has 24.4 Mpts per qq
  Metro high density has 91.1 Mpts per qq

  Chisago (aside from lakes) needs 1500m and 750m processing tiles
  1500m fails at about half
  3000m fails on most

  For now try double RAM to see if will finish with 1500m tiles.

* 2020-02-12: 3.merge.sh: should setnames on vrt

* 2020-02-13: Clip HAG >= 0

* 2020-02-19:
  Make 750m tiles for Chisago Co

  Cleaning up AGL LAZ

  1) Making a tileindex on the out LAZ and reading across tile boundaries
     and writing a count raster clearly shows the tiles (3km spacing, 200m
     overlap of higher density).
  2) Using filters.sample(0.001) does not fully clean this up (and is slow)
     I presume this is because the HAG (Z) doesn't match exactly
  3) Similarly, pdal merge does not get rid of duplicate points
  4) Cropping to output bounds appears to work (and when resulting tiles
     are merged and count band produced, the edges aren't noticable)

	Sorting doesn't help LAZ file size over doing nothing.
	Nothing: 142MB, morton: 243, morton reverse: 327, X 283, GpsTime: 152

	Removing the HAG >= 0 filter doesn't effect nodata pixels in test area

	(4) works.

	Adding window=10 to DEM and window=2 to DSM/nDSM adds very little time 
	(~ second over 3 minutes) or memory but significantly cleans up the output.

	Don't add window=2 to DSM/nDSM... this makes up bad data (like bridging a
	river with trees).  For the DSMs nodata is really nodata.  For the DEMs we
	can assume a generally smooth ground and this fills most small nodata gaps 
	which are caused by trees or buildings obscuring the ground.
	 
